{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to tips for CP4D and OpenShift Here are some docs on tips on installing and managing CP4D and OpenShift. If you have any questions, comments or issues, please send me an email ronan.bourlier@fr.ibm.com or reach me on slack @Ronan Documents Getting external access to Db2 database installed in CP4D on a ROKS VPC Gen2","title":"Home"},{"location":"#welcome-to-tips-for-cp4d-and-openshift","text":"Here are some docs on tips on installing and managing CP4D and OpenShift. If you have any questions, comments or issues, please send me an email ronan.bourlier@fr.ibm.com or reach me on slack @Ronan","title":"Welcome to tips for CP4D and OpenShift"},{"location":"#documents","text":"Getting external access to Db2 database installed in CP4D on a ROKS VPC Gen2","title":"Documents"},{"location":"db2-roks/","text":"View Db2 databases externally from a CP4D installed on ROKS VPC Gen2 A specificity from ROKS VPC Gen2 in IBM Cloud is the security level. The node servers don't have an external IP address and cannot be accessed externally. Once you have installed Db2 in CP4D, the usual way to vie the database externally is by using NodePort access. In our case this is not working since the node cannot be viewed externally. The solution is to use a Load Balancer that needs to be added. Here is the procedure. Log in to Openshift environment and go to your CP4D project. $ oc login -u apikey -p XXXXXXXX --server=https://c100-e.eu-de.containers.cloud.ibm.com:NNNN Login successful. You have access to 69 projects, the list has been suppressed. You can list all projects with 'oc projects' Using project \"cp4d\". $ oc project cp4d Already on project \"cp4d\" on server \"https://c100-e.eu-de.containers.cloud.ibm.com:NNNNN\" Find the pods for your database. In the Databases > Details page, find the Deployment id. I did all actions from the master server (second server in the list) through ssh. You can connect through the second public IP (10.99.mmm.nnn). Then all installation is done through the internal IP (192.168.1.nnn) $ ssh root@10.99.mmm.nnn for each prereqs, I test them with the --apply option to check what will be done and then I apply them. Downloads Get installation files For IBMers wget http://icpfs1.svl.ibm.com/zen/cp4d-builds/2.5.0.0/production/installer/63/cpd-linux wget http://icpfs1.svl.ibm.com/zen/cp4d-builds/2.5.0.0/production/internal/repo.yaml icpfs1 server is IBM internal only, and cannot be reached from TEC servers. Download the files on your PC while connected to IBM VPN and then send them to TEC servers while connected to TEC VPN. For clients Get CPD installer & API keyfor customers : from passport advantage (CC3Y1ML) (the bin will download the tgz) or get the installer direclty : https://ibm-open-platform.ibm.com/repos/cpd/v2.5/EE/cloudpak4data-ee-v2.5.0.0.tgz then get your API key : https://myibm.ibm.com/products-services/containerlibrary Installation with NFS I did all installation with NFS as an NFS server comes preconfigured. I don't know the status of Portwaorx at the time I write this documentation and if it will become the new standard. Prereqs # chmod a+x ./cpd-linux # ./cpd-linux adm --repo repo.yaml --assembly lite --namespace zen # ./cpd-linux adm --repo repo.yaml --assembly lite --namespace zen \u2014apply Zen projects is created by the script Installation # oc project zen Already on project \"zen\" on server \"https://192.168.1.101:8443\u201d. # ./cpd-linux --repo repo.yaml --assembly lite --namespace zen -c nfs-client --transfer-image-to=docker-registry.default.svc:5000/zen --target-registry-username=$(oc whoami) --target-registry-password=$(oc whoami -t) --accept-all-licenses Everything should run fine You can access CP4D at https://zen-cpd-zen.apps.tec.uk.ibm.com/ The default login is admin / password PS : don't forget to connect to the VPN to get access, I often miss this part and wonder why my installation is down ;) CP4D 2.5 installation is minimal, even Watson Studio is not installed Watson Studio Source : https://www.ibm.com/support/producthub/icpdata/docs/content/SSQNUZ_current/wsj/install/install-ws.html So now let\u2019s install Watson Studio Set the parameter on every node in the cluster: echo \"vm.max_map_count=262144\" >> /etc/sysctl.conf ; sysctl -p Set the time zone for the master node # vi override.yaml global: masterTimezone: 'Europe/Paris' Prereqs # ./cpd-linux adm --repo repo.yaml --assembly wsl --namespace zen --apply # ./cpd-linux adm --repo repo.yaml --assembly wsl --namespace zen Installation # ./cpd-linux --repo repo.yaml --assembly wsl --namespace zen -c nfs-client --transfer-image-to=docker-registry.default.svc:5000/zen --target-registry-username=$(oc whoami) --target-registry-password=$(oc whoami -t) --accept-all-licenses \u2014override override.yaml Spark Let's install also Spark engine in order to get Spark environment in Studio # ./cpd-linux --repo repo.yaml --assembly spark --namespace zen -c nfs-client --transfer-image-to=docker-registry.default.svc:5000/zen --target-registry-username=$(oc whoami) --target-registry-password=$(oc whoami -t) --accept-all-licenses \u2014override override.yaml You now have a basic CP4D installation. Let's add some addons now. Watson Knowledge Catalog Source : https://www.ibm.com/support/producthub/icpdata/docs/content/SSQNUZ_current/wsj/install/install-wkc.html Prereqs Add the following line in /etc/security/limits.conf # vi /etc/security/limits.conf [\u2026] * hard nofile 66560 * soft nofile 66560 Kernel configuration Update kernel on all server (Masters and workers) # echo \"kernel.sem = 250 1024000 32 4096\" >> /etc/sysctl.conf ; sysctl -p # echo \"kernel.msgmax = 65536\" >> /etc/sysctl.conf ; sysctl -p # echo \"kernel.msgmnb = 65536\" >> /etc/sysctl.conf ; sysctl -p # ipcs -l Cluster configuration # ./cpd-linux adm --repo repo.yaml --assembly wkc --namespace zen \u2014apply # ./cpd-linux adm --repo repo.yaml --assembly wkc --namespace zen Installation # ./cpd-linux --repo repo.yaml --assembly wkc --namespace zen -c nfs-client --transfer-image-to=docker-registry.default.svc:5000/zen --target-registry-username=$(oc whoami) --target-registry-password=$(oc whoami -t) --accept-all-licenses --override override.yaml --ask-pull-registry-credentials Watson OpenScale Source : https://www.ibm.com/support/producthub/icpdata/docs/content/SSQNUZ_current/cpd/svc/openscale/openscale-install.html Cluster configuration # ./cpd-linux adm --repo repo.yaml --assembly aiopenscale --namespace zen \u2014apply # ./cpd-linux adm --repo repo.yaml --assembly aiopenscale --namespace zen Installation # ./cpd-linux --repo repo.yaml --assembly aiopenscale --namespace zen -c nfs-client --transfer-image-to=docker-registry.default.svc:5000/zen --target-registry-username=$(oc whoami) --target-registry-password=$(oc whoami -t) --accept-all-licenses --override override.yaml --ask-pull-registry-credentials Watson Machine Learning Source : https://www.ibm.com/support/producthub/icpdata/docs/content/SSQNUZ_current/cpd/svc/wsj/ml-install.html # ./cpd-linux --repo repo.yaml --assembly wml --namespace zen -c nfs-client --transfer-image-to=docker-registry.default.svc:5000/zen --target-registry-username=$(oc whoami) --target-registry-password=$(oc whoami -t) --accept-all-licenses --override override.yaml --ask-pull-registry-credentials Tips Here are some tips on installation and issue solving Error initializing source docker... If you have an issue like \"Error initializing source docker://cp.icr.io/cp/cpd/zen-meta-couchdb:v2.5.0.0-210: unable to retrieve auth token: invalid username/password\u201d, check the credentials in repo.yaml. They change sometimes so refresh the repo.yaml, or better use the myibm key from https://myibm.ibm.com/products-services/containerlibrary. Username is cp in this case. Full restart In some case, debugging a single pod is not enough. I sometimes restart all CP4D with this command to restar all the pods. # oc delete pods -n zen --all It may take a while to restart all the pods, depending on the number of addons you have installed.","title":"Db2 on ROKS Gen2"},{"location":"db2-roks/#view-db2-databases-externally-from-a-cp4d-installed-on-roks-vpc-gen2","text":"A specificity from ROKS VPC Gen2 in IBM Cloud is the security level. The node servers don't have an external IP address and cannot be accessed externally. Once you have installed Db2 in CP4D, the usual way to vie the database externally is by using NodePort access. In our case this is not working since the node cannot be viewed externally. The solution is to use a Load Balancer that needs to be added. Here is the procedure. Log in to Openshift environment and go to your CP4D project. $ oc login -u apikey -p XXXXXXXX --server=https://c100-e.eu-de.containers.cloud.ibm.com:NNNN Login successful. You have access to 69 projects, the list has been suppressed. You can list all projects with 'oc projects' Using project \"cp4d\". $ oc project cp4d Already on project \"cp4d\" on server \"https://c100-e.eu-de.containers.cloud.ibm.com:NNNNN\" Find the pods for your database. In the Databases > Details page, find the Deployment id. I did all actions from the master server (second server in the list) through ssh. You can connect through the second public IP (10.99.mmm.nnn). Then all installation is done through the internal IP (192.168.1.nnn) $ ssh root@10.99.mmm.nnn for each prereqs, I test them with the --apply option to check what will be done and then I apply them.","title":"View Db2 databases externally from a CP4D installed on ROKS VPC Gen2"},{"location":"db2-roks/#downloads","text":"Get installation files","title":"Downloads"},{"location":"db2-roks/#for-ibmers","text":"wget http://icpfs1.svl.ibm.com/zen/cp4d-builds/2.5.0.0/production/installer/63/cpd-linux wget http://icpfs1.svl.ibm.com/zen/cp4d-builds/2.5.0.0/production/internal/repo.yaml icpfs1 server is IBM internal only, and cannot be reached from TEC servers. Download the files on your PC while connected to IBM VPN and then send them to TEC servers while connected to TEC VPN.","title":"For IBMers"},{"location":"db2-roks/#for-clients","text":"Get CPD installer & API keyfor customers : from passport advantage (CC3Y1ML) (the bin will download the tgz) or get the installer direclty : https://ibm-open-platform.ibm.com/repos/cpd/v2.5/EE/cloudpak4data-ee-v2.5.0.0.tgz then get your API key : https://myibm.ibm.com/products-services/containerlibrary","title":"For clients"},{"location":"db2-roks/#installation-with-nfs","text":"I did all installation with NFS as an NFS server comes preconfigured. I don't know the status of Portwaorx at the time I write this documentation and if it will become the new standard.","title":"Installation with NFS"},{"location":"db2-roks/#prereqs","text":"# chmod a+x ./cpd-linux # ./cpd-linux adm --repo repo.yaml --assembly lite --namespace zen # ./cpd-linux adm --repo repo.yaml --assembly lite --namespace zen \u2014apply Zen projects is created by the script","title":"Prereqs"},{"location":"db2-roks/#installation","text":"# oc project zen Already on project \"zen\" on server \"https://192.168.1.101:8443\u201d. # ./cpd-linux --repo repo.yaml --assembly lite --namespace zen -c nfs-client --transfer-image-to=docker-registry.default.svc:5000/zen --target-registry-username=$(oc whoami) --target-registry-password=$(oc whoami -t) --accept-all-licenses Everything should run fine You can access CP4D at https://zen-cpd-zen.apps.tec.uk.ibm.com/ The default login is admin / password PS : don't forget to connect to the VPN to get access, I often miss this part and wonder why my installation is down ;) CP4D 2.5 installation is minimal, even Watson Studio is not installed","title":"Installation"},{"location":"db2-roks/#watson-studio","text":"Source : https://www.ibm.com/support/producthub/icpdata/docs/content/SSQNUZ_current/wsj/install/install-ws.html So now let\u2019s install Watson Studio Set the parameter on every node in the cluster: echo \"vm.max_map_count=262144\" >> /etc/sysctl.conf ; sysctl -p Set the time zone for the master node # vi override.yaml global: masterTimezone: 'Europe/Paris'","title":"Watson Studio"},{"location":"db2-roks/#prereqs_1","text":"# ./cpd-linux adm --repo repo.yaml --assembly wsl --namespace zen --apply # ./cpd-linux adm --repo repo.yaml --assembly wsl --namespace zen","title":"Prereqs"},{"location":"db2-roks/#installation_1","text":"# ./cpd-linux --repo repo.yaml --assembly wsl --namespace zen -c nfs-client --transfer-image-to=docker-registry.default.svc:5000/zen --target-registry-username=$(oc whoami) --target-registry-password=$(oc whoami -t) --accept-all-licenses \u2014override override.yaml","title":"Installation"},{"location":"db2-roks/#spark","text":"Let's install also Spark engine in order to get Spark environment in Studio # ./cpd-linux --repo repo.yaml --assembly spark --namespace zen -c nfs-client --transfer-image-to=docker-registry.default.svc:5000/zen --target-registry-username=$(oc whoami) --target-registry-password=$(oc whoami -t) --accept-all-licenses \u2014override override.yaml You now have a basic CP4D installation. Let's add some addons now.","title":"Spark"},{"location":"db2-roks/#watson-knowledge-catalog","text":"Source : https://www.ibm.com/support/producthub/icpdata/docs/content/SSQNUZ_current/wsj/install/install-wkc.html","title":"Watson Knowledge Catalog"},{"location":"db2-roks/#prereqs_2","text":"Add the following line in /etc/security/limits.conf # vi /etc/security/limits.conf [\u2026] * hard nofile 66560 * soft nofile 66560","title":"Prereqs"},{"location":"db2-roks/#kernel-configuration","text":"Update kernel on all server (Masters and workers) # echo \"kernel.sem = 250 1024000 32 4096\" >> /etc/sysctl.conf ; sysctl -p # echo \"kernel.msgmax = 65536\" >> /etc/sysctl.conf ; sysctl -p # echo \"kernel.msgmnb = 65536\" >> /etc/sysctl.conf ; sysctl -p # ipcs -l","title":"Kernel configuration"},{"location":"db2-roks/#cluster-configuration","text":"# ./cpd-linux adm --repo repo.yaml --assembly wkc --namespace zen \u2014apply # ./cpd-linux adm --repo repo.yaml --assembly wkc --namespace zen","title":"Cluster configuration"},{"location":"db2-roks/#installation_2","text":"# ./cpd-linux --repo repo.yaml --assembly wkc --namespace zen -c nfs-client --transfer-image-to=docker-registry.default.svc:5000/zen --target-registry-username=$(oc whoami) --target-registry-password=$(oc whoami -t) --accept-all-licenses --override override.yaml --ask-pull-registry-credentials","title":"Installation"},{"location":"db2-roks/#watson-openscale","text":"Source : https://www.ibm.com/support/producthub/icpdata/docs/content/SSQNUZ_current/cpd/svc/openscale/openscale-install.html","title":"Watson OpenScale"},{"location":"db2-roks/#cluster-configuration_1","text":"# ./cpd-linux adm --repo repo.yaml --assembly aiopenscale --namespace zen \u2014apply # ./cpd-linux adm --repo repo.yaml --assembly aiopenscale --namespace zen","title":"Cluster configuration"},{"location":"db2-roks/#installation_3","text":"# ./cpd-linux --repo repo.yaml --assembly aiopenscale --namespace zen -c nfs-client --transfer-image-to=docker-registry.default.svc:5000/zen --target-registry-username=$(oc whoami) --target-registry-password=$(oc whoami -t) --accept-all-licenses --override override.yaml --ask-pull-registry-credentials","title":"Installation"},{"location":"db2-roks/#watson-machine-learning","text":"Source : https://www.ibm.com/support/producthub/icpdata/docs/content/SSQNUZ_current/cpd/svc/wsj/ml-install.html # ./cpd-linux --repo repo.yaml --assembly wml --namespace zen -c nfs-client --transfer-image-to=docker-registry.default.svc:5000/zen --target-registry-username=$(oc whoami) --target-registry-password=$(oc whoami -t) --accept-all-licenses --override override.yaml --ask-pull-registry-credentials","title":"Watson Machine Learning"},{"location":"db2-roks/#tips","text":"Here are some tips on installation and issue solving","title":"Tips"},{"location":"db2-roks/#error-initializing-source-docker","text":"If you have an issue like \"Error initializing source docker://cp.icr.io/cp/cpd/zen-meta-couchdb:v2.5.0.0-210: unable to retrieve auth token: invalid username/password\u201d, check the credentials in repo.yaml. They change sometimes so refresh the repo.yaml, or better use the myibm key from https://myibm.ibm.com/products-services/containerlibrary. Username is cp in this case.","title":"Error initializing source docker..."},{"location":"db2-roks/#full-restart","text":"In some case, debugging a single pod is not enough. I sometimes restart all CP4D with this command to restar all the pods. # oc delete pods -n zen --all It may take a while to restart all the pods, depending on the number of addons you have installed.","title":"Full restart"}]}